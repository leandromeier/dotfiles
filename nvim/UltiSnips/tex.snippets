global !p
def math():
	return vim.eval('vimtex#syntax#in_mathzone()') == '1'

def comment(): 
	return vim.eval('vimtex#syntax#in_comment()') == '1'

def env(name):
	[x,y] = vim.eval("vimtex#env#is_inside('" + name + "')") 
	return x != '0' and y != '0'

endglobal

# the options:
# b - this snippet will only be expanded at the beginning of a line
# A - this snippet will be automatically expanded
# w - this snippet will only expand at word boundaries, i.e. not as a suffix or prefix to another word. Overrdies 'i'
# i - this snippet will only expand if the trigger is the first word on a line or preceded by whitespace.
# r - the trigger is expected to be a regular expression. Frame it by quotations because ultisnips expects it to be surrounded by a character.


snippet ö "backslash" iA
\\
endsnippet

#now need a snippet for 'ö'
snippet oe "ö" i
ö
endsnippet

snippet " "latex quote" iA
\`\`$1''$0
endsnippet

snippet beg "begin{} / end{}" bA
\begin{$1}
  $2
\end{$1}
$0
endsnippet

# sections etc
snippet chp "chapter" bA
\chapter{$1}
$0
endsnippet

snippet sec "section" bA
\section{$1}
$0
endsnippet

snippet se* "section*" bA
\section*{$1}
$0
endsnippet

snippet ssec "subsection" bA
\subsection{$1}
$0
endsnippet

snippet sse* "subsection*" bA
\subsection*{$1}
$0
endsnippet

snippet sssec "subsubsection" bA
\subsubsection{$1}
$0
endsnippet

snippet ssse* "subsubsection*" bA
\subsubsection*{$1}
$0
endsnippet
 
# math
context "not math()"
snippet < "inline math" A
$${1}$`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ', ')', ':']:
	snip.rv = ' '
else:
	snip.rv = ''
`$2
endsnippet

context "not math()"
snippet mk "inline math" wA
$${1}$`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ', ')']:
	snip.rv = ' '
else:
	snip.rv = ''
`$2
endsnippet

snippet \[ "display math" bA
\[
  $1
\]
$0
endsnippet

snippet dm "display math" bA
\[
  $1
\]
$0
endsnippet

snippet ali "align*" b
\begin{align*}
  $1 & $2 \\\\
  $3
\end{align*}
$0
endsnippet

snippet eqn "equation" b
\begin{equation}
  $1  $2  $3 
\end{equation}
$0
endsnippet

context "math()"
snippet :: "colon" iA
\colon
endsnippet

context "math()"
snippet fun "signature of function" iA
$1 \colon $2 \to $3
endsnippet

snippet alifun "full definition of function" iA
\begin{align*}
  $1 \colon $2 & \to $3 \\\\
  $4 & \mapsto $5
\end{align*}
$0
endsnippet

context "math()"
snippet theset "{x \in X | p(X)}" iA
\left\\{$1 \mid $2\right\\}
endsnippet

context "math()"
snippet aset "{ ... }" iA
\left\\{$1\\right\\}$0
endsnippet

context "math()"
snippet \\\ "\setminus" iA
\\setminus
endsnippet

context "math()"
snippet uuu "\cup" iA
\\cup
endsnippet

context "math()"
snippet nnn "\cap" iA
\\cap
endsnippet

context "math()"
snippet ccc "\subset" iA
\\subseteq
endsnippet

context "math()"
snippet ccr "\supset" iA
\\supseteq
endsnippet

context "math()"
snippet lcr "\leq" iA
\\leq
endsnippet

context "math()"
snippet rcr "\geq" iA
\\geq
endsnippet

context "math()"
snippet __ "subscript block" iA
_{$1}$0
endsnippet

context "math()"
snippet cons "(X_a, x_a)" w
\left( X_{$1}, x_{$1} \right)$0
endsnippet

context "math()"
snippet polp "(X_a, xi_a)" w
\left( X_{$1}, \xi_{$1} \right)$0
endsnippet

context "math()"
snippet prd "X_1 x X_2" wA
$1 = $1_{1} \times $1_{2} $0
endsnippet

context "math()"
snippet xx "\times" wA
\\times
endsnippet

context "math()"
snippet ^^ "superscript block" iA
^{$1}$0
endsnippet

context "math()"
snippet üü "superscript block" iA
^{$1}$0
endsnippet

context "math()"
snippet frac "frac" iA
\frac{$1}{$2}$0
endsnippet

context "math()"
snippet ceil "ceil" iA
\left\lceil ${1:{VISUAL}} \right\rceil $0
endsnippet

context "math()"
snippet floor "floor" iA
\left\lfloor ${1:{VISUAL}} \right\rfloor $0
endsnippet

context "math()"
snippet sqrt "sqrt" iA
\sqrt{$1}$0
endsnippet

priority 100
snippet "(w+)dual" "vee" riA
{`!p snip.rv=match.group(1)`}^{\vee} $0
endsnippet

priority 10
context "math()"
snippet dual "dual / ^v" iA
^{\vee} $0
endsnippet

# visual brackets
snippet lr "left( right)" i
\left( ${1:${VISUAL}} \right)$0
endsnippet

snippet lr( "left( right)" i
\left( ${1:${VISUAL}} \right)$0
endsnippet

snippet lr| "left| right|" i
\left| ${1:${VISUAL}} \right|$0
endsnippet

snippet lr{ "left\{ right\}" i
\left\\{ ${1:${VISUAL}} \right\\}$0
endsnippet

snippet lr[ "left[ right]" i
\left[ ${1:${VISUAL}} \right]$0
endsnippet

snippet lr< "left\langle right\rangle" i
\left\langle ${1:${VISUAL}} \right\rangle$0
endsnippet

snippet scp "scalar product / left\langle right\rangle" i
\left\langle ${1:${VISUAL}} \right\rangle$0
endsnippet

snippet leftr "left( right]" i
\left( ${1:${VISUAL}} \right]$0
endsnippet

snippet rightr "left[ right)" i
\left[ ${1:${VISUAL}} \right)$0
endsnippet


# other names for brackets (non-visual)
context "math()"
snippet big( "\left( \right)" iA
\left( $1 \right)$0
endsnippet

context "math()"
snippet big{ "\left\{ \right\}" iA
\left\\{ $1 \right\\}$0
endsnippet

context "math()"
snippet bigv "\left\vert \right\vert" iA
\left\vert $1 \right\vert$0
endsnippet

context "math()"
snippet bigV "\left\Vert \right\Vert" iA
\left\Vert $1 \right\Vert$0
endsnippet

context "math()"
snippet big< "\left\langle \right\langle" iA
\left\langle $1 \right\rangle
endsnippet

context "math()"
snippet << "\langle \rangle" iA
\langle $1 \rangle$0
endsnippet


# big n-ary operators
context "math()"
snippet sum "sum" w
\sum_{$1}^{$2} $0
endsnippet

context "math()"
snippet prod "product" i
\prod_{$1}^{$2} $0
endsnippet

context "math()"
snippet dirsum "direct sum" w
\bigoplus_{$1}^{$2} $0
endsnippet


context "math()"
snippet int "integral" w
\int_{$1}^{$2} $3 \, d$0
endsnippet

context "math()"
snippet union "bigcup" i
\bigcup_{$1}^{$2} $0
endsnippet

context "math()"
snippet UUU "bigcup" i
\bigcup_{$1}^{$2} $0
endsnippet

context "math()"
snippet inter "bigcap" w
\bigcap_{$1}^{$2} $0
endsnippet

context "math()"
snippet III "bigcap" i
\bigcap_{$1}^{$2} $0
endsnippet

# lists
context "math()"
snippet some "finitely many" iA
$1_{$2}, \dots, $1_{$3}$0
endsnippet

context "math()"
snippet many "infinitely many" iA
$1_{$2}, $1_{$3}, \dots$0
endsnippet

context "math()"
snippet seq "sequence" wA
{($1_{$2})}_{$3 \in \mathbb{N}}$0
endsnippet

context "math()"
snippet chaiin "chain of ideal (increasing)" iA
$1_{$2} \subseteq $1_{$3} \subseteq \dots$0
endsnippet

context "math()"
snippet chain "chain of subspaces (decreasing)" iA
$1_{$2} \supseteq $1_{$3} \supseteq \dots$0
endsnippet

context "math()"
snippet homo "homogeneous coordinates" iA
[$1_{$2} : \dots : $1_{$3}]
endsnippet

context "math()"
snippet homco "homogeneous coordinates" iA
[$1_{$2} : \dots : $1_{$3}]
endsnippet

context "math()"
snippet asandps "product of affine spaces with projective" iA
\mathbb{A}^{n_1} \times \cdots \times \mathbb{A}^{n_\ell} \times
\mathbb{P}^{m_1} \times \cdots \times \mathbb{P}^{n_{\ell'}}
endsnippet

context "math()"
snippet pair "(X,x)" iA
\left( $1, $2 \right)$0
endsnippet

#specific alg-geo things
context "math()"
snippet Grs "Grassmannian Gr(k,n)" iA
\Grs_{$1, $2}$0
endsnippet

context "math()"
snippet Spc "Spec ( )" iA
\Specc \left( $1 \right) $0
endsnippet

context "math()"
snippet restr "rho_^( )" iA
\rho_{$2}^{$1} $0
endsnippet

context "math()"
snippet Pol "Pol( )" iA
\Pol_{$1}^{+}\left( $2, $3\right) $0
endsnippet

context "math()"
snippet XSig "X_Sigma" iA
X_{\Sigma} $0
endsnippet

context "math()"
snippet XFan "X_Fan" iA
X_{$1} $0
endsnippet

context "math()"
snippet nvol "normalized volume" iA
\widehat{\vol}_{$1}\left( $2\right)$0
endsnippet



#matrices etc.
context "math()"
snippet mat "pmatrix" bA
\begin{pmatrix}
  $1
\end{pmatrix}
$0
endsnippet

#specific useful stuff for the master's thesis
context "math()"
snippet symN "Sym(N)" iA
\Sym \left( \mathbb{N} \right)$0
endsnippet

context "math()"
snippet symI "Sym(Inf)" iA
\Sym \left( \infty \right)$0
endsnippet

context "math()"
snippet incN "Inc(N)" iA
\Inc \left( \mathbb{N} \right)$0
endsnippet

context "math()"
snippet mnr "minor" iA
$1 \times $1 $0
endsnippet

context "math()"
snippet Vker "V (ker ( ))" iA
\mathcal{V} \left( \ker \left( $1 \right) \right) $0
endsnippet

context "math()"
snippet Kpowers "products of powers of K" iA
K^{$1} \times K^{$2 \times \mathbb{N}} \times K^{$3 \times \mathbb{N} \times \mathbb{N} } $0
endsnippet

#stuff for maps
context "math()"
snippet -> "rightarrow" iA
\rightarrow 
endsnippet

context "math()"
snippet mto "mapsto" wA
\mapsto
endsnippet

context "math()"
snippet kernel "ker( )" iA
\ker \left( $1 \right)$0
endsnippet

context "math()"
snippet img "im( )" iA
\img \left( $1 \right)$0
endsnippet

# arrows
context "math()"
snippet corrow "<--->" iA
\longleftrightarrow 
endsnippet

context "math()"
snippet larrow "<---" iA
\longleftarrow 
endsnippet

context "math()"
snippet rarrow "--->" iA
\longrightarrow 
endsnippet

# blackboard bold symbols
context "math()"
snippet NN "\mathbb{N}" iA
\mathbb{N}$0
endsnippet

context "math()"
snippet ZZ "\mathbb{Z}" iA
\mathbb{Z}$0
endsnippet

context "math()"
snippet QQ "\mathbb{Q}" iA
\mathbb{Q}$0
endsnippet

context "math()"
snippet RR "\mathbb{R}" iA
\mathbb{R}$0
endsnippet

context "math()"
snippet CC "\mathbb{C}" iA
\mathbb{C}$0
endsnippet

# the torus
context "math()"
snippet trs "\mathbb{C}^{*}" iA
\mathbb{C}^{*}$0
endsnippet

priority 100
context "math()"
snippet "mbb([a-zA-Z])" "\mathbb{-}" riA
\mathbb{`!p snip.rv = match.group(1)`}$0
endsnippet

context "math()"
snippet C[ "\mathbb{C}" iA
\mathbb{C} \left[ ${1:${VISUAL}} \right]$0
endsnippet

context "math()"
snippet HH "\mathbb{H}" iA
\mathbb{H}$0
endsnippet

context "math()"
snippet PP "\mathbb{P}" iA
\mathbb{P}$0
endsnippet

context "math()"
snippet AA "\mathbb{A}" iA
\mathbb{A}
endsnippet

context "math()"
snippet FF "\mathbb{F}" iA
\mathbb{F}
endsnippet

context "math()"
snippet KK "\mathbb{K}" iA
\mathbb{K}
endsnippet

context "math()"
snippet C*n "\mathbb{C}^*^n " iA
\left( \mathbb{C}^{*} \right) ^{n}$0
endsnippet

context "math()"
snippet C** "\mathbb{C}^*" iA
\mathbb{C}^{*}$0
endsnippet

#bold text in math mode
context "math()"
snippet bfm "boldsymbol" iA
\boldsymbol{$1} $0
endsnippet

#more math symbols
context "math()"
snippet ooo "infinity" iA
\infty
endsnippet

context "math()"
snippet vtrop "V trop" iA
\mathcal{V}_{trop}\left( $1 \right) $0
endsnippet

#special symbols
context "math()"
snippet perp "perp" iA
\perp $0
endsnippet

context "math()"
snippet tns "tensor" iA
\otimes $0
endsnippet

#special fonts
priority 100
context "math()"
snippet "([a-zA-Z])cal" "caligraphic" riA
\mathcal{`!p snip.rv=match.group(1)`}$0
endsnippet

priority 10
context "math()"
snippet cal "\mathcal{}" wA
\mathcal{$1}$0
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])frak" "fraktal" riA
\mathfrak{`!p snip.rv=match.group(1)`}
endsnippet

priority 10
context "math()"
snippet frak "\mathfrak{}" wA
\mathfrak{$1}$0
endsnippet

context "math()"
snippet mrr "\mathrm{}" iA
\mathrm{$1}$0
endsnippet

context "math()"
snippet text "\text{}" wA
\text{$1} $0
endsnippet

context "math()"
snippet txt "\text{}" wA
\text{$1} $0
endsnippet

#greek letters
context "math()"
snippet alp "alpha" wA
\alpha
endsnippet

context "math()"
snippet bet "beta" wA
\beta
endsnippet

context "math()"
snippet aaa "alpha" iA
\alpha
endsnippet

context "math()"
snippet bbb "beta" iA
\beta
endsnippet

context "math()"
snippet Del "Delta" wA
\Delta
endsnippet

context "math()"
snippet del "delta" wA
\delta
endsnippet

context "math()"
snippet vareps "varepsilon" iA
\varepsilon
endsnippet

context "math()"
snippet lam "lambda" wA
\lambda
endsnippet

context "math()"
snippet mmu "mu" wA
\mu
endsnippet

context "math()"
snippet rrho "rho" wA
\rho
endsnippet

context "math()"
snippet ssig "sigma" wA
\sigma
endsnippet

context "math()"
snippet Ssig "Sigma" wA
\Sigma
endsnippet

context "math()"
snippet ttau "tau" wA
\tau
endsnippet

context "math()"
snippet chii "chi" wA
\chi
endsnippet

context "math()"
snippet vph "varphi" iA
\varphi
endsnippet

context "math()"
snippet pssi "psi" wA
\psi
endsnippet

context "math()"
snippet pii "pi" iA
\pi
endsnippet

context "math()" 
snippet "gr (\w+)" "greek letter" r
`!p snip.rv = ("\\" + match.group(1))`
endsnippet

#easier to hit ' than `
context "math()" 
snippet "'(\w+)" "greek letter" r
`!p snip.rv = ("\\" + match.group(1))`
endsnippet


#arrows
context "math()"
snippet Rarrow "Rightarrow" iA
\Rightarrow 
endsnippet

context "math()"
snippet Larrow "Leftarrow" iA
\Leftarrow 
endsnippet

context "math()"
snippet iff "if and only if" i
\Leftrightarrow
endsnippet

#special lettering (cursive, ...)
context "not math()"
snippet emp "emph{}" w
\emph{$1}$0
endsnippet

context "not math()"
snippet emph "emph{}" w
\emph{$1}$0
endsnippet

#norms etc
context "math()"
snippet nrm "norm" iA
\\| $1 \\| $0
endsnippet

context "math()"
snippet normm "\| \|" i
\\| ${1:${VISUAL}} \\| $0
endsnippet

context "math()"
snippet abss "| |" i
| ${1:${VISUAL}} | $0
endsnippet

# overlines, hat, tilde, ...
# credit to Gilles Castel 
priority 10
context "math()"
snippet "bar" "bar" riA
\overline{$1}$0
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])bar" "bar" riA
\overline{`!p snip.rv=match.group(1)`}
endsnippet

priority 10
context "math()"
snippet "hat" "hat" riA
\hat{$1}$0
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])hat" "hat" riA
\hat{`!p snip.rv=match.group(1)`}
endsnippet

priority 10
context "math()"
snippet "tilde" "tilde" riA
\tilde{$1}$0
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])tilde" "tilde" riA
\tilde{`!p snip.rv=match.group(1)`}
endsnippet

context "math()"
snippet ~ "\tilde{}" iA
\tilde{$1} $0
endsnippet

# numbering / lists
snippet enum "enumerate" b
\begin{enumerate}[${1:first-item}]
  \item $2
\end{enumerate}
$0
endsnippet

snippet item "itemize" b
\begin{itemize}
  \item $1
\end{itemize}
$0
endsnippet

snippet nit "new item" b
`!p snip << 2`\item $1
endsnippet

snippet tab "table" b
\begin{table}[htb]
  \centering
  \begin{tabular}{$3}
    $4
  \end{tabular}
  \caption{$1}%
  \label{tab:$2}
\end{table}
$0
endsnippet

snippet tab* "table*" b
\begin{table*}[htb]
  \centering
  \begin{tabular}{$1}
    $2
  \end{tabular}
\end{table*}
$0
endsnippet

# figures
snippet fig "figure" b
\begin{figure}[htb]
  \centering
  $3
  \caption{$1}%
  \label{fig:$2}
\end{figure}
$0
endsnippet

post_jump "create_fig_minipages(snip)"  
snippet "fig(\d+)" "figure with n minipages" br
`!p snip.rv = match.group(1)`
endsnippet

snippet inc "includegraphics" b
\includegraphics[$1]{$0}
endsnippet

snippet tikz "tikzpicture" b
\begin{tikzpicture}
  $0
\end{tikzpicture}
endsnippet

# templates
snippet tempmain "template for a main document" b
\documentclass[a4paper]{$1}
\usepackage[backend=bibtex,
style=alphabetic,
sorting=ynt]{biblatex}
\addbibresource{$5}

\title{$2}
\author{$3}
\date{$4}

\usepackage{amsmath}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsthm}
\usepackage{enumerate}
\usepackage{booktabs}
\usepackage{graphicx}
\usepackage[hidelinks]{hyperref}

\setlength\parindent{0pt}

% no thmstyle set -> default is plain
\newtheorem{theorem}{Theorem}[section]
\newtheorem{proposition}[theorem]{Proposition}
\newtheorem{lemma}[theorem]{Lemma}
\newtheorem{corollary}[theorem]{Corollary}
\newtheorem{remark}[theorem]{Remark}

%definitions and examples should not be cursive
\theoremstyle{definition} 
\newtheorem{definition}[theorem]{Definition}
\newtheorem{example}[theorem]{Example}

\DeclareMathOperator{\Cl}{Cl}
\DeclareMathOperator{\Cone}{Cone}
\DeclareMathOperator{\codim}{codim}
\DeclareMathOperator{\Div}{Div} 
\let\div\relax
\DeclareMathOperator{\div}{div}
\DeclareMathOperator{\Loc}{Loc}
\DeclareMathOperator{\ord}{ord}
\DeclareMathOperator{\SL}{SL}
\DeclareMathOperator{\Spec}{Spec}
\DeclareMathOperator{\TV}{TV}


\begin{document}
\maketitle
\tableofcontents

$0

\printbibliography
\end{document}
endsnippet

snippet tempsub "template for a subfile" b
\documentclass[${1:path/to/main.tex}]{subfiles}
\graphicspath{{\subfix{${2:path/to/images}}}}

\begin{document}

$0
\end{document}
endsnippet

snippet temptikz "a standalone tikz file" b
\documentclass[tikz]{standalone}

\begin{document}
\begin{tikzpicture}
$0
\end{tikzpicture}
\end{document}
endsnippet

snippet tempcorr "corrections" b
\documentclass[a4paper]{article}

\usepackage[german]{babel}
\usepackage{amssymb}
\usepackage{amsmath}
\usepackage{booktabs}

\title{Korrekturen Serie ${1:x}}
\author{${2:name-student}}

\begin{document}
\maketitle

$0

\begin{table*}[h]
  \centering
  \begin{tabular}{cccccc}
    \toprule
    1 & 2 & 3 & 4 & 5 & Total \\\\
    \midrule
    ${4:ex1} & ${6:ex2} & ${8:ex3} & 
    ${10:ex4} & ${12:ex5} & ${13:total} \\\\
    \bottomrule
  \end{tabular}
\end{table*}

\section*{Aufgabe 1}
$3

\section*{Aufgabe 2}
$5

\section*{Aufgabe 3}
$7

\section*{Aufgabe 4}
$9

\section*{Aufgabe 5}
$11

\end{document}
endsnippet

#word abbreviations
context "not math()" 
snippet thm "theorem" i
theorem
endsnippet

context "not math()" 
snippet cor "corollary" i
corollary
endsnippet

context "not math()" 
snippet lem "lemma" i
lemma
endsnippet

context "not math()" 
snippet prop "proposition" i
proposition
endsnippet

context "not math()" 
snippet def "definition" i
definition
endsnippet

context "not math()" 
snippet exa "example" i
example
endsnippet

context "not math()" 
snippet exx "example" i
example
endsnippet

context "not math()" 
snippet noth "noetherian" i
Noetherian
endsnippet

context "not math()" 
snippet TFAE "The following are equivalent" i
The following are equivalent:
endsnippet

context "not math()" 
snippet Tfae "The following are equivalent" i
The following are equivalent:
endsnippet

context "not math()" 
snippet tfae "the following are equivalent" i
the following are equivalent:
endsnippet

context "not math()" 
snippet gcq "good categorical quotient" i
good categorical quotient 
endsnippet

context "not math()" 
snippet gq "geometric quotient" i
geometric quotient 
endsnippet

context "not math()" 
snippet DVR "discrete valuation ring" i
discrete valuation ring 
endsnippet

# preamble
context "not math()" 
snippet package "use package" i
\usepackage[$2]{$1}
endsnippet

context "not math()" 
snippet DMO "Declare Math Operator" i
\DeclareMathOperator{\\$1}{$1}
endsnippet

context "not math()" 
snippet Dmo "Declare Math Operator" i
\DeclareMathOperator{\\$1}{$2}
endsnippet

context "not math()" 
snippet iso "isomorphism" w
isomorphism
endsnippet

context "not math()" 
snippet homo "homomorphism" w
homomorphism
endsnippet

# python snippets
# you can put python code between '`!p' and '`' 
# snip.rv is the value that is returned by the snippet

# this needs to become better to be useful
# maybe using a global snippet and some option for an item snippet
snippet "item(\d+)" "Itemize <number>" r
\begin{itemize}
	`!p snip.rv= int(match.group(1))*("\item" + '\n')`
\end{itemize}
$0
endsnippet

post_jump "create_row_placeholders(snip)"
snippet "tr(\d+)" "latex table row variable" br
`!p snip.rv = match.group(1)`
endsnippet


#intervals (using the package interval)
context "math()"
snippet rinter "[-,-)" w
\\rinterval{$1}{$2} $0
endsnippet

context "math()"
snippet linter "(-,-]" w
\\linterval{$1}{$2} $0
endsnippet


